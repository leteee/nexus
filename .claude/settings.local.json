{
  "permissions": {
    "allow": [
      "WebSearch",
      "Bash(mkdir -p src/nexus tests docs config scripts)",
      "Bash(python -m pip install -e \".[dev]\")",
      "Bash(pre-commit install)",
      "Bash(pytest -v)",
      "Bash(black --check src/ tests/ scripts/)",
      "Bash(black src/ tests/ scripts/)",
      "Bash(flake8 src/ tests/ scripts/)",
      "Bash(pytest -v --cov=src/nexus --cov-report=term)",
      "Bash(git add .)",
      "Bash(git commit -m \"$(cat <<''EOF''\nInitial commit: Initialize Nexus Python project with Vibecode best practices\n\n- Set up modern Python project structure with src/ layout\n- Configure development dependencies (Black, isort, flake8, mypy, pytest)\n- Add comprehensive testing setup with 100% coverage\n- Implement pre-commit hooks for code quality automation\n- Create project documentation and configuration files\n- Follow Vibecode principles: clean code, type hints, modular design\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git add .pre-commit-config.yaml)",
      "Bash(git commit --no-verify -m \"$(cat <<''EOF''\nInitial commit: Initialize Nexus Python project with Vibecode best practices\n\n- Set up modern Python project structure with src/ layout\n- Configure development dependencies (Black, isort, flake8, mypy, pytest)\n- Add comprehensive testing setup with 100% coverage\n- Implement pre-commit hooks for code quality automation\n- Create project documentation and configuration files\n- Follow Vibecode principles: clean code, type hints, modular design\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push -u origin master)",
      "Read(//d/Projects/temp_data_replay/**)",
      "Bash(pytest tests/test_plugins.py -v)",
      "Bash(pytest tests/test_handlers.py -v)",
      "Bash(python -m pip install pyarrow)",
      "Bash(pytest tests/test_handlers.py tests/test_plugins.py tests/test_datahub.py -v)",
      "Bash(python demo_runner.py)",
      "Bash(pytest tests/test_config.py -v)",
      "Bash(pytest tests/test_config.py::TestHierarchicalConfiguration::test_deep_merge_configuration -v -s)",
      "Bash(pytest tests/test_plugins.py tests/test_handlers.py tests/test_datahub.py -v)",
      "Bash(pytest tests/test_integration.py -v)",
      "Bash(python -m nexus.cli list)",
      "Bash(python -m nexus.cli plugin \"Data Generator\" --config num_rows=500 random_seed=999)",
      "Bash(python -m nexus.cli run --config plugins.generator.num_rows=200)",
      "Bash(python -m nexus.cli run)",
      "Bash(pytest tests/ -v)",
      "Bash(pytest tests/test_nexus_framework.py -v)",
      "Bash(pytest tests/test_nexus_framework.py -v --tb=short)",
      "Bash(python -m nexus.cli run --config plugins.Data Generator.num_rows=100 plugins.Data Generator.num_categories=2)"
    ],
    "deny": [],
    "ask": []
  }
}