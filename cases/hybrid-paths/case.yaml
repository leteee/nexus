# Hybrid Path Resolution Demo
# Demonstrates all three path resolution strategies

case_info:
  name: "Hybrid Path Resolution"
  description: "Demonstrates explicit (@prefix), implicit, and direct path resolution"
  version: "1.0.0"

# Global data sources registry (optional but powerful)
data_sources:
  # Standard identifier naming (can use with or without @)
  customer_master:
    handler: "parquet"
    path: "warehouse/customers.parquet"

  product_catalog:
    handler: "csv"
    path: "warehouse/products.csv"

  # Special naming (MUST use @ prefix)
  "2024-sales":
    handler: "csv"
    path: "archive/2024_sales.csv"

pipeline:
  # Step 1: Generate customer data
  - plugin: "Sample Data Generator"
    config:
      dataset_type: "customers"
      size: "small"

      # Direct path (no data_sources needed)
      output_data: "temp/customers_generated.csv"

  # Step 2: Generate sales data
  - plugin: "Sample Data Generator"
    config:
      dataset_type: "sales"
      size: "medium"

      # Direct path with subdirectory
      output_data: "temp/sales_generated.csv"

# Example of how to reference logical names (for future plugins):
#
# - plugin: "Data Merger"
#   config:
#     # Explicit logical name (@ prefix - recommended)
#     master_data: "@customer_master"
#
#     # Implicit logical name (auto-detected)
#     products: "product_catalog"
#
#     # Direct path
#     temp_data: "temp/customers_generated.csv"
#
#     # Special logical name (@ prefix required)
#     historical: "@2024-sales"
#
#     # Output
#     output_data: "results/merged.parquet"
